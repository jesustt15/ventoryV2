version: '3.8' # Especificar una versión es una buena práctica

services:
  web:
    build: .
    ports:
      # La IP fija es para exponer el servicio a tu red local, está bien.
      - "3000:3000"
    environment:
      # Asegúrate de que estas variables se cargan desde un archivo .env
      - DATABASE_URL=${DATABASE_URL}
    # Modificamos el comando de inicio
    command: sh -c "npx prisma migrate deploy && npm run start"
    depends_on:
      db:
        # Esta es la clave: el servicio web no iniciará hasta que la db esté 'healthy'
        condition: service_healthy
    restart: unless-stopped

  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      # Tu healthcheck está casi bien, solo un pequeño ajuste
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 10
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      # Es útil exponer el puerto de la DB al host para depuración (opcional)
      - "5433:5432" 

volumes:
  postgres_data:
    # Definir el volumen explícitamente es bueno