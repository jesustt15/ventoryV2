generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"] // Añade esta línea
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// --- DATOS MAESTROS DE EQUIPOS ---
model Marca {
  id     String   @id @default(uuid())
  nombre String   @unique // Nombre de la marca, ej: Dell, HP, Apple
  modelos ModeloDispositivo[] // Una marca puede tener muchos modelos
}

model ModeloDispositivo {
  id            String    @id @default(uuid())
  nombre        String    // Nombre del modelo, ej: Latitude 5400, iPhone 13, ThinkPad T480
  marcaId       String
  marca         Marca     @relation(fields: [marcaId], references: [id])
  tipo          String
  img            String?    // Ej: "Laptop", "Desktop", "Monitor", "Teléfono IP", "Impresora", "Switch"
  // Puedes añadir más campos específicos del modelo aquí si es necesario,
  // como especificaciones base, año de lanzamiento, etc.

  computadores  Computador[]
  dispositivos  Dispositivo[] // Renombrado de Equipos a Dispositivo
}

// --- ESTRUCTURAS EXISTENTES MODIFICADAS ---
model Gerencia {
  id            String         @id @default(uuid())
  nombre        String
  gerenteId      String?
  gerente       Usuario?        @relation(fields: [gerenteId], references: [id])
  departamentos Departamento[]
}

model Configuracion {
  id                Int     @id @default(1)
  gerenteGeneralId  String? @unique
  gerenteGeneral    Usuario? @relation(fields: [gerenteGeneralId], references: [id])
}

model Departamento {
  id           String       @id @default(uuid())
  nombre       String
  gerenciaId   String
  ceco         String
  sociedad      String
  gerencia     Gerencia     @relation(fields: [gerenciaId], references: [id])
  usuarios     Usuario[]
  computadores Computador[]
  dispositivos Dispositivo[]
  asignaciones Asignaciones[] // Renombrado de Equipos a Dispositivo
}
model Usuario {
  id             String       @id @default(uuid())
  nombre         String
  apellido       String
  cargo          String
  legajo         Int
  ced            String
  departamentoId String
  departamento   Departamento @relation(fields: [departamentoId], references: [id])
  computadores   Computador[]
  dispositivos   Dispositivo[]
  asignaciones   Asignaciones[] // Renombrado de Equipos a Dispositivo
  gerencias      Gerencia[]     // Opposite relation field
  configuracion  Configuracion? // Opposite relation field for gerenteGeneral
  targetAsignaciones Asignaciones[] @relation("targetUsuario") // Opposite relation field for targetUsuario
}


model Computador {
  id             String          @id @default(uuid())
  serial         String          @unique // El serial es único para esta instancia
  estado         String          // Ej: Activo, En Reparación, De Baja, Almacenado
  modeloId       String          // Relación al modelo específico
  modelo         ModeloDispositivo @relation(fields: [modeloId], references: [id])
  usuarioId      String?
  usuario        Usuario?        @relation(fields: [usuarioId], references: [id])
  departamentoId String?
  departamento   Departamento?   @relation(fields: [departamentoId], references: [id])
  nsap String?
  host String?
  sede String?
  ubicacion String?
  sisOperativo String?
  arquitectura String?
  macWifi String?
  macEthernet String?
  ram String?
  almacenamiento String?
  procesador String?
  sapVersion String?
  officeVersion String?
  asignaciones Asignaciones[]
  historialModificaciones HistorialModificaciones[]
}

model HistorialModificaciones {
  id              String   @id @default(uuid())
  fecha           DateTime @default(now()) // La fecha en que se hizo el cambio
  campo           String   // El campo que se modificó, ej: "ram", "procesador"
  valorAnterior   String?  // El valor que tenía antes del cambio
  valorNuevo      String?  // El nuevo valor
  
  // Relación con el computador modificado
  computadorId    String
  computador      Computador @relation(fields: [computadorId], references: [id], onDelete: Cascade)

  @@index([computadorId])
}

// Renombrado de Equipos a Dispositivo para mayor claridad y evitar colisión de nombres
model Dispositivo {
  id             String          @id @default(uuid())
  serial         String          @unique // El serial es único para esta instancia
  estado         String          // Ej: Activo, En Reparación, De Baja, Almacenado
  modeloId       String
  ubicacion      String?          // Relación al modelo específico
  modelo         ModeloDispositivo @relation(fields: [modeloId], references: [id])
  usuarioId      String?
  usuario        Usuario?        @relation(fields: [usuarioId], references: [id])
  departamentoId String?
  sede            String?
  mac            String?
  ip             String?
  departamento   Departamento?   @relation(fields: [departamentoId], references: [id])
  nsap String?
  asignaciones Asignaciones[]
}

model LineaTelefonica {
  id           String      @id @default(uuid())
  numero       String       @unique
  proveedor    String
  destino      String? // Número asignado a la línea
  estado       String?   // Ej: Activa, Inactiva, En Reparación
  imei         String? // IMEI del dispositivo móvil, si aplica
  asignaciones  Asignaciones[]
}

enum Role {
  user
  admin
}

model User { // Para autenticación de la app
  id       String @id @default(uuid())
  username String @unique
  password String
  role     Role @default(user)
}

model Asignaciones {
  id        Int      @id @default(autoincrement())
  date      DateTime @default(now())
  notes     String?
  actionType String 
  motivo    String?
  gerente    String?
  localidad   String?
  serialC       String? // Serial del computador asignado
  modeloC   String? // Modelo del computador asignado
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // --- A QUÉ SE ASIGNA (Polimórfico: Usuario o Departamento) ---
  targetType           String // "Usuario" o "Departamento"
  
  targetUsuarioId      String?
  targetUsuario        Usuario?      @relation(fields: [targetUsuarioId], references: [id], name: "targetUsuario")
  
  targetDepartamentoId String?
  targetDepartamento   Departamento? @relation(fields: [targetDepartamentoId], references: [id])


  // --- QUÉ SE ASIGNA (Polimórfico: Computador o Dispositivo) ---
  itemType             String // "Computador" o "Dispositivo"

  computadorId         String?
  computador           Computador?   @relation(fields: [computadorId], references: [id])

  dispositivoId        String?
  dispositivo          Dispositivo?  @relation(fields: [dispositivoId], references: [id])

  lineaTelefonicaId    String?
  lineaTelefonica      LineaTelefonica? @relation(fields: [lineaTelefonicaId], references: [id])
  gerenteId            String?
   gerenteUsuario       Usuario? @relation(fields: [gerenteId], references: [id])
}